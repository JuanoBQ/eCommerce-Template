# Generated by Django 4.2.7 on 2025-09-02 01:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=20, unique=True, verbose_name='order number')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='UUID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20, verbose_name='status')),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', max_length=20, verbose_name='payment status')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('phone', models.CharField(max_length=20, verbose_name='phone')),
                ('shipping_first_name', models.CharField(max_length=150, verbose_name='shipping first name')),
                ('shipping_last_name', models.CharField(max_length=150, verbose_name='shipping last name')),
                ('shipping_address', models.TextField(verbose_name='shipping address')),
                ('shipping_city', models.CharField(max_length=100, verbose_name='shipping city')),
                ('shipping_state', models.CharField(max_length=100, verbose_name='shipping state')),
                ('shipping_country', models.CharField(max_length=100, verbose_name='shipping country')),
                ('shipping_postal_code', models.CharField(max_length=20, verbose_name='shipping postal code')),
                ('billing_first_name', models.CharField(blank=True, max_length=150, verbose_name='billing first name')),
                ('billing_last_name', models.CharField(blank=True, max_length=150, verbose_name='billing last name')),
                ('billing_address', models.TextField(blank=True, verbose_name='billing address')),
                ('billing_city', models.CharField(blank=True, max_length=100, verbose_name='billing city')),
                ('billing_state', models.CharField(blank=True, max_length=100, verbose_name='billing state')),
                ('billing_country', models.CharField(blank=True, max_length=100, verbose_name='billing country')),
                ('billing_postal_code', models.CharField(blank=True, max_length=20, verbose_name='billing postal code')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='subtotal')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='tax amount')),
                ('shipping_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='shipping amount')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='discount amount')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='total amount')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('tracking_number', models.CharField(blank=True, max_length=100, verbose_name='tracking number')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('shipped_at', models.DateTimeField(blank=True, null=True, verbose_name='shipped at')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='delivered at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'db_table': 'orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], max_length=20, verbose_name='status')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='orders.order', verbose_name='order')),
            ],
            options={
                'verbose_name': 'Order Status History',
                'verbose_name_plural': 'Order Status Histories',
                'db_table': 'order_status_history',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(verbose_name='note')),
                ('is_public', models.BooleanField(default=False, verbose_name='is public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_notes', to='orders.order', verbose_name='order')),
            ],
            options={
                'verbose_name': 'Order Note',
                'verbose_name_plural': 'Order Notes',
                'db_table': 'order_notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='quantity')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='unit price')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='total price')),
                ('product_name', models.CharField(max_length=200, verbose_name='product name')),
                ('product_sku', models.CharField(max_length=100, verbose_name='product SKU')),
                ('variant_info', models.CharField(blank=True, max_length=200, verbose_name='variant info')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order', verbose_name='order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='product')),
                ('variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.productvariant', verbose_name='variant')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'db_table': 'order_items',
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status', 'payment_status'], name='orders_status_7dca14_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['user', 'status'], name='orders_user_id_17dbdf_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_number'], name='orders_order_n_1336be_idx'),
        ),
    ]
