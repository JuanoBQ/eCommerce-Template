# Generated by Django 4.2.7 on 2025-09-02 01:21

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('categories', '__first__'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone number')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='birth date')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='avatar')),
                ('is_vendor', models.BooleanField(default=False, verbose_name='is vendor')),
                ('is_customer', models.BooleanField(default=True, verbose_name='is customer')),
                ('default_address', models.TextField(blank=True, verbose_name='default address')),
                ('default_city', models.CharField(blank=True, max_length=100, verbose_name='default city')),
                ('default_state', models.CharField(blank=True, max_length=100, verbose_name='default state')),
                ('default_country', models.CharField(blank=True, max_length=100, verbose_name='default country')),
                ('default_postal_code', models.CharField(blank=True, max_length=20, verbose_name='default postal code')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='email notifications')),
                ('sms_notifications', models.BooleanField(default=False, verbose_name='sms notifications')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, verbose_name='biography')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('preferred_size', models.CharField(blank=True, max_length=10, verbose_name='preferred size')),
                ('preferred_brand', models.CharField(blank=True, max_length=100, verbose_name='preferred brand')),
                ('show_email', models.BooleanField(default=False, verbose_name='show email')),
                ('show_phone', models.BooleanField(default=False, verbose_name='show phone')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('favorite_categories', models.ManyToManyField(blank=True, to='categories.category', verbose_name='favorite categories')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'db_table': 'user_profiles',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('home', 'Home'), ('work', 'Work'), ('other', 'Other')], default='home', max_length=10, verbose_name='type')),
                ('is_default', models.BooleanField(default=False, verbose_name='is default')),
                ('street_address', models.CharField(max_length=255, verbose_name='street address')),
                ('apartment', models.CharField(blank=True, max_length=50, verbose_name='apartment')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('state', models.CharField(max_length=100, verbose_name='state')),
                ('country', models.CharField(max_length=100, verbose_name='country')),
                ('postal_code', models.CharField(max_length=20, verbose_name='postal code')),
                ('contact_name', models.CharField(max_length=150, verbose_name='contact name')),
                ('contact_phone', models.CharField(max_length=20, verbose_name='contact phone')),
                ('delivery_instructions', models.TextField(blank=True, verbose_name='delivery instructions')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'db_table': 'addresses',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
    ]
